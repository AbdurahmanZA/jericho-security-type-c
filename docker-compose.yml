version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jericho-postgres
    environment:
      POSTGRES_DB: jericho_security
      POSTGRES_USER: jericho
      POSTGRES_PASSWORD: jericho_secure_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - jericho-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jericho -d jericho_security"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jericho-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - jericho-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # JERICHO Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: jericho-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: jericho_security
      DB_USER: jericho
      DB_PASSWORD: jericho_secure_2024
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-jericho_jwt_secret_change_in_production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-jericho_refresh_secret_change_in_production}
      HLS_PATH: /app/hls
      SNAPSHOTS_PATH: /app/snapshots
      LOG_LEVEL: info
    volumes:
      - hls_data:/app/hls
      - snapshots_data:/app/snapshots
      - backend_logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jericho-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # JERICHO Frontend (Nginx)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: jericho-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - hls_data:/usr/share/nginx/html/hls
      - snapshots_data:/usr/share/nginx/html/snapshots
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jericho-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  hls_data:
    driver: local
  snapshots_data:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  jericho-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16